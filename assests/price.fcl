
FUNCTION_BLOCK platform

VAR_INPUT
    offer : REAL;
    customer : REAL;
END_VAR

VAR_OUTPUT
    price_tag : REAL;
END_VAR

FUZZIFY offer
    TERM cheap := (0,0) (50,1) (100,0);
	TERM average := (100,0) (150,1) (200,0);
	TERM expensive := (200,0) (250,1) (300,0);
END_FUZZIFY

FUZZIFY customer
    TERM cheap := (0,0) (50,1) (100,0);
	TERM average := (100,0) (150,1) (200,0);
	TERM expensive := (200,0) (250,1) (300,0);
END_FUZZIFY

DEFUZZIFY price_tag
	TERM bad := (0,0) (5,1) (10,0);
	TERM good := (10,0) (15,1) (20,0);
	TERM great := (20,0) (25,1) (30,0);
	METHOD : COG;
	DEFAULT := 0;
END_DEFUZZIFY

RULEBLOCK No1
	AND : MIN;			// Use 'min' for 'and' (also implicit use 'max' for 'or' to fulfill DeMorgan's Law)
	ACT : MIN;			// Use 'min' activation method
	ACCU : MAX;			// Use 'max' accumulation method

	RULE 1 : IF offer IS cheap AND customer cheap IS THEN price_tag IS good;
	RULE 2 : IF offer IS cheap AND customer average IS THEN price_tag IS great;
	RULE 3 : IF offer IS cheap AND customer expensive IS THEN price_tag IS great;

	RULE 4 : IF offer IS average AND customer cheap IS THEN price_tag IS bad;
    RULE 5 : IF offer IS average AND customer average IS THEN price_tag IS good;
    RULE 6 : IF offer IS average AND customer expensive IS THEN price_tag IS great;

    RULE 7 : IF offer IS expensive AND customer cheap IS THEN price_tag IS bad;
    RULE 8 : IF offer IS expensive AND customer average IS THEN price_tag IS bad;
    RULE 9 : IF offer IS expensive AND customer expensive IS THEN price_tag IS good;

END_RULEBLOCK

END_FUNCTION_BLOCK